@page "/game/{GameUId}"
@page "/game/{GameUId}/{PlayerUId}"
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager

<div class="game__wrapper">

    @if (gameManager?.GameStage == EnumGameStage.Preparing)
    {
        <PreparingContainer Options="@gameManager?.GamePreparation" />
    }
    else if (gameManager?.GameStage == EnumGameStage.Starting)
    {
        <StartingContainer OnCountdownEnd="StartGame" />
    }
    else if (gameManager?.GameStage == EnumGameStage.Started)
    {
        <GameContainer GameManager="@gameManager" />
    }

</div>



@code {
    [Parameter]
    public string GameUId { get; set; }
    [Parameter]
    public string PlayerUId { get; set; }

    private GameManager gameManager;


    protected override async Task OnInitializedAsync()
    {
        var hubUrl = NavigationManager.ToAbsoluteUri(GameHub.HubUrl).ToString();
        var gameId = GuidEncoder.Decode(GameUId);
        gameManager = new GameManager(hubUrl, gameId);
        gameManager.PropertyChanged += (o, e) => StateHasChanged();

        await gameManager.StartConnection();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Guid? playerId = PlayerUId is not null ? GuidEncoder.Decode(PlayerUId) : null;
            gameManager.Player = playerId is not null ? new Player(playerId.Value) : null;
            await InitGame();
            await gameManager.JoinGame();
        }
    }

    private async Task InitGame()
    {
        var queryString = new Uri(NavigationManager.Uri).Query;

        if (QueryHelpers.ParseQuery(queryString).TryGetValue("init", out var pt))
        {
            var playerType = Enum.Parse(typeof(EnumPlayerType), pt.ToString().ToUpper()) as EnumPlayerType?;
            if (playerType.HasValue)
            {
                gameManager.Player.PlayerType = playerType.Value;
                await gameManager.CreateGame();
            }
        }
    }

    private async Task StartGame() => await gameManager.StartGame();

}
